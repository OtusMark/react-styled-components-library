{"version":3,"sources":["components/Button/Button.tsx","components/layout/Card.tsx","components/layout/Container.tsx","components/ImageSlider/ImageSlider.tsx","components/ImageSlider/SvgArrowLeft.tsx","components/ImageSlider/SvgArrowRight.tsx","components/ImageSlider/ImageSliderDemo.tsx","components/Checkbox/Checkbox.tsx","components/Checkbox/checkboxDemo.tsx","components/InputText/InputText.tsx","components/InputText/InputTextDemo.tsx","components/EditableSpan/EditableSpan.tsx","components/EditableSpan/SvgPen.tsx","components/EditableSpan/EditableSpanDemo.tsx","components/RadioButtons/RadioButtons.tsx","components/RadioButtons/RadioButtonsDemo.tsx","components/Select/Select.tsx","components/Select/SelectDemo.tsx","components/RangeSlider/RangeSlider.tsx","components/RangeSlider/RangeSliderDemo.tsx","components/Pagination/Pagination.tsx","components/Pagination/PaginationDemo.tsx","components/Filter/FilterDemo.tsx","components/InputFile/InputFile.tsx","components/Avatar/Avatar.tsx","App.tsx","reportWebVitals.ts","styles/theme.ts","styles/GlobalStyles.ts","index.tsx"],"names":["Button","restProps","StyledButton","styled","button","disabled","theme","color","grey","primary","main","black","white","shadow","font","family","default","size","dark","light","Card","div","Container","ImageSlider","props","imagesData","useState","currentSlide","setCurrentSlide","imagesQuantity","length","ActiveSlide","index","SliderMain","StyledArrowLeft","onClick","StyledArrowRight","map","slide","SlideWrapper","active","StyledImg","src","image","alt","description","id","xmlns","x","y","width","height","viewBox","xmlSpace","d","img","SliderData","ImageSliderDemo","Checkbox","type","onChange","children","StyledLabel","e","label","CheckboxDemo","boolean","setBoolean","checked","InputText","onChangeText","onKeyPress","onEnter","error","InputTextWrapper","StyledInput","currentTarget","value","key","StyledError","input","s1","InputTextDemo","text","setText","setError","newText","EditModeInput","EditMOdeOff","StyledSpan","span","StyledSvgPen","SuperEditableSpan","editMode","deactivateEditMode","activateEditMode","spanProps","autoFocus","onBlur","restSpanProps","className","onDoubleClick","EditableSpanDemo","setEditMode","EditableSpan","RadioButtons","name","options","onChangeOption","onChangeCallback","mappedOptions","o","i","RadioContainer","Checkmark","RadioButtonsDemo","arr","Select","option","Fragment","Option","htmlFor","undefined","SelectWrapper","tabIndex","SelectDemo","RangeSlider","onChangeRange","values","StyledSlider","defaultValue","renderTrack","Track","renderThumb","Thumb","state","StyledTrack","StyledThumb","valueNow","ReactSlider","RangeSliderDemo","setValues","StyledDiv1","StyledDiv2","Pagination","pageSize","totalItemsCount","currentPage","changePage","portionSize","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","PaginatorContainer","filter","p","PageNumberButton","pageNumber","PaginationDemo","page","setPage","PageDisplay","FilterDemo","filterValue","setFilterValue","placeholder","Wrapper","item","includes","InputFile","hidden","handleSize","Avatar","App","StyledContainer","CardsWrapper","StyledCard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","primaryColor","secondaryColor","ternaryColor","lighten","darken","secondary","ternary","100","200","300","400","500","600","700","800","900","source","montserrat","s3","s2","b1","b2","b3","b4","b5","0","1","2","3","mediaQuery","mobileS","mobileM","mobileL","tablet","laptop","laptopL","fourK","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43796604.chunk.js","sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\nimport {ThemeType} from \"../../styles/theme\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype PropsType = DefaultButtonPropsType\r\n\r\nexport const Button: React.FC<PropsType> = ({...restProps}) => {\r\n\r\n    return (\r\n        <StyledButton{...restProps}/>\r\n    );\r\n}\r\n\r\n// Styles\r\n// Styles\r\nconst StyledButton = styled.button<StyledComponentProps<any, ThemeType, any, any>>`\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: ${({ disabled }) => disabled ? \"default\" : \"pointer\"};\r\n  background-color: ${({ theme, disabled }) => disabled ? theme.color.grey[\"300\"] : theme.color.primary.main};\r\n  color: ${({ theme, disabled }) => disabled ? theme.color.black : theme.color.white};\r\n  padding: 0.5rem 1rem;\r\n  \r\n  box-shadow: ${({ theme }) => theme.shadow['1']};\r\n\r\n  font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n  font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n  \r\n  transition: all .1s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme, disabled }) => disabled ? 'none' : theme.color.primary.dark};\r\n    transform: ${({ disabled }) => disabled ? 'none' : 'translateY(-0.1em)'};\r\n    box-shadow: ${({ theme, disabled }) => disabled ? theme.shadow['1'] : theme.shadow['4']};\r\n  }\r\n  \r\n  &:active {\r\n    background-color: ${({ theme, disabled }) => disabled ? 'none' : theme.color.primary.light};\r\n    transform: ${({ disabled }) => disabled ? 'none' : 'translateY(0)'};\r\n    box-shadow: ${({ theme, disabled }) => disabled ? theme.shadow['1'] : theme.shadow['1']};\r\n  }\r\n`;","import styled from \"styled-components/macro\";\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1 0 300px;\r\n  \r\n  padding: 30px;\r\n  height: 300px;\r\n  \r\n  border: 1px solid ${({theme}) => theme.color.grey[\"100\"] };\r\n  box-shadow: ${({theme}) => theme.shadow[\"1\"]};\r\n  border-radius: 10px;\r\n`","import styled from \"styled-components/macro\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 0 60px;\r\n  \r\n  width: 100%;\r\n  height: 100%;\r\n`","import React, {useState} from \"react\";\r\nimport {SliderDataType} from \"./ImageSliderDemo\";\r\nimport {SvgArrowLeft} from \"./SvgArrowLeft\";\r\nimport {SvgArrowRight} from \"./SvgArrowRight\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\nimport {ThemeType} from \"../../styles/theme\";\r\n\r\n\r\n// Component\r\nexport const ImageSlider: React.FC<ImageSliderProps> = (props) => {\r\n\r\n    // Props\r\n    const {\r\n        imagesData\r\n    } = props\r\n\r\n    const [currentSlide, setCurrentSlide] = useState(0)\r\n    const imagesQuantity: number = imagesData.length\r\n\r\n    const nextSlide = () => {\r\n        setCurrentSlide(currentSlide === imagesQuantity - 1 ? 0 : currentSlide + 1)\r\n    }\r\n\r\n    const prevSlide = () => {\r\n        setCurrentSlide(currentSlide === 0 ? imagesQuantity - 1 : currentSlide - 1)\r\n    }\r\n\r\n    const ActiveSlide = (index: number) => {\r\n        return index === currentSlide\r\n    }\r\n\r\n    return (\r\n        <SliderMain>\r\n            <StyledArrowLeft onClick={prevSlide}/>\r\n            <StyledArrowRight onClick={nextSlide}/>\r\n            {imagesData.map((slide, index) => {\r\n                return (\r\n                    <SlideWrapper key={index} active={ActiveSlide(index)}>\r\n                        {index === currentSlide && <StyledImg src={slide.image} alt={slide.description}/>}\r\n                    </SlideWrapper>\r\n                )\r\n            })}\r\n        </SliderMain>\r\n    )\r\n}\r\n\r\n// Styles\r\n\r\nconst SliderMain = styled.div`\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  height: 200px;\r\n  width: 75%;\r\n`\r\n\r\nconst StyledArrowLeft = styled(SvgArrowLeft)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 45%;\r\n  left: -15%;\r\n  z-index: 100;\r\n`\r\n\r\nconst StyledArrowRight = styled(SvgArrowRight)`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 45%;\r\n  right: -15%;\r\n  z-index: 100;\r\n`\r\n\r\nconst SlideWrapper = styled.div<StyledComponentProps<any, ThemeType, { active: boolean }, any>>`\r\n  opacity: ${props => props.active ? 1 : 0 };\r\n  transform: ${props => props.active ? 'scale(1.08)' : '' };;\r\n  transition-duration: 1s;\r\n  \r\n  height: inherit;\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n  height: inherit;\r\n  width: 100%;\r\n  \r\n  box-shadow: ${({theme}) => theme.shadow[\"1\"]};\r\n  \r\n  user-select: none;\r\n  object-fit: cover;\r\n`\r\n\r\n// Types\r\ntype ImageSliderProps = {\r\n    imagesData: SliderDataType\r\n}","import * as React from \"react\";\n\nexport function SvgArrowLeft(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      id=\"ArrowLeft\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x={0}\n      y={0}\n      width={30}\n      height={30}\n      viewBox=\"0 0 306 306\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <path\n        d=\"M247.35 35.7L211.65 0l-153 153 153 153 35.7-35.7L130.05 153z\"\n      />\n    </svg>\n  );\n}\n","import * as React from \"react\";\n\nexport function SvgArrowRight(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      id=\"ArrowRight\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x={0}\n      y={0}\n      width={30}\n      height={30}\n      viewBox=\"0 0 306 306\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <path\n        d=\"M94.35 0l-35.7 35.7L175.95 153 58.65 270.3l35.7 35.7 153-153z\"\n      />\n    </svg>\n  );\n}\n","import {ImageSlider} from \"./ImageSlider\";\r\n\r\n// Data\r\nconst SliderData = [\r\n    {\r\n        id: 1,\r\n        image: 'https://images.unsplash.com/photo-1617107374365-442a6876ed0a?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1951&q=80',\r\n        description: 'Image 1'\r\n    },\r\n    {\r\n        id: 2,\r\n        image: 'https://images.unsplash.com/photo-1617033332334-1e51884abd51?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=975&q=80',\r\n        description: 'Image 2'\r\n    },\r\n    {\r\n        id: 3,\r\n        image: 'https://images.unsplash.com/photo-1617118658610-916b54a8c334?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1952&q=80',\r\n        description: 'Image 3'\r\n    },\r\n    {\r\n        id: 4,\r\n        image: 'https://images.unsplash.com/photo-1593642532400-2682810df593?ixid=MXwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80',\r\n        description: 'Image 4'\r\n    },\r\n]\r\n\r\n// Component\r\nexport const ImageSliderDemo = () => {\r\n    return (\r\n        <ImageSlider imagesData={SliderData}/>\r\n    )\r\n}\r\n\r\n// Types\r\nexport type SliderDataType = typeof SliderData","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const Checkbox: React.FC<PropsType> = (props) => {\r\n\r\n    const {\r\n        type,\r\n        onChange,\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange(e)\r\n    }\r\n\r\n    return (\r\n        <StyledLabel>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n            <span>{children}</span>\r\n        </StyledLabel>\r\n    );\r\n}\r\n\r\n// Styles\r\nconst StyledLabel = styled.label<any>`\r\n  // Общие стили чекбокса\r\n  cursor: pointer;\r\n  \r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  // Стили для элемента input c type=\"checkbox\". Тут убираеться дефолтный чекбокс\r\n  & > input {\r\n    position: absolute;\r\n    z-index: -1;\r\n    opacity: 0;\r\n  }\r\n\r\n  // Стили для текста чекбокса\r\n  & > span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    user-select: none;\r\n  }\r\n\r\n  // Стили коробки (кнопки) чекбокса\r\n  & > span::before {\r\n    content: '';\r\n    display: inline-block;\r\n    width: 16px;\r\n    height: 16px;\r\n    flex-shrink: 0;\r\n    flex-grow: 0;\r\n    border: 1px solid ${({theme}) => theme.color.grey[\"500\"]};\r\n    margin-right: 0.5em;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: 50% 50%;\r\n  }\r\n\r\n  // стили при наведении курсора на checkbox\r\n  & > input:not(:disabled):not(:checked) + span:hover::before {\r\n    border-color: ${({theme}) => theme.color.grey[\"500\"]}; // 183\r\n  }\r\n\r\n  // стили для активного чекбокса (при нажатии на него)\r\n  & > input:not(:disabled):active + span::before {\r\n    background-color: ${({theme}) => theme.color.grey[\"500\"]};\r\n    border-color: ${({theme}) => theme.color.grey[\"700\"]};\r\n  }\r\n\r\n  // стили для чекбокса, находящегося в фокусе\r\n  & > input:focus + span::before {\r\n    box-shadow: ${({theme}) => theme.shadow[\"0\"]};\r\n  }\r\n\r\n  // стили для чекбокса, находящегося в фокусе и не находящегося в состоянии checked\r\n  & > input:focus:not(:checked) + span::before {\r\n    border-color: ${({theme}) => theme.color.grey[\"700\"]};\r\n  }\r\n\r\n  // стили для чекбокса, находящегося в состоянии checked\r\n  & > input:checked + span::before {\r\n    border-color: ${({theme}) => theme.color.primary.main};\r\n    background-color: ${({theme}) => theme.color.primary.main};\r\n    background-size: 65% 65%;\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  // стили для чекбокса, находящегося в состоянии disabled\r\n  & > input:disabled + span::before {\r\n    background-color: ${({theme}) => theme.color.grey[\"700\"]};\r\n  }\r\n`\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void\r\n    children: string // Checkbox text\r\n};\r\n","import {Checkbox} from \"./Checkbox\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const CheckboxDemo = () => {\r\n\r\n    const [boolean, setBoolean] = useState(false)\r\n\r\n    const changeCheckboxStatus = () => {\r\n        setBoolean(!boolean)\r\n    }\r\n\r\n    return (\r\n        <Checkbox onChange={changeCheckboxStatus} checked={boolean}>Checkbox text</Checkbox>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n};\r\n\r\nexport const InputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    return (\r\n        <InputTextWrapper>\r\n            <StyledInput\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <StyledError>\r\n                {error && <span>{error}</span>}\r\n            </StyledError>\r\n        </InputTextWrapper>\r\n    );\r\n}\r\n\r\nconst InputTextWrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\r\n  // Общие стили инпута\r\n  \r\n  padding: 1rem .5rem;\r\n  margin-bottom: 20px;\r\n  \r\n  height: 20px;\r\n  width: 100%;\r\n\r\n  font-size: ${({theme}) => theme.font.size.default};\r\n  font-family: ${({theme}) => theme.font.family.default};\r\n  \r\n  border: 1px solid rgb(109, 109, 109);\r\n`\r\n// Стили контейнера с ошибкой\r\nconst StyledError = styled.div`\r\n  position: absolute;\r\n  bottom: 1px;\r\n\r\n  // Стили текста ошибки\r\n  & > span {\r\n    font-size: ${({theme}) => theme.font.size.s1};\r\n    color: red;\r\n  }\r\n`","import {InputText} from \"./InputText\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const InputTextDemo = () => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const changeText = (newText: string) => {\r\n        setText(newText)\r\n    }\r\n\r\n    // if the value is empty displays error\r\n    const checkValue = () => {\r\n        if (text === '') {\r\n            setError('The value must not be empty')\r\n        } else {\r\n            if (error !== '') {\r\n                setError('')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <InputText onChangeText={changeText} onEnter={checkValue} value={text} error={error}/>\r\n    )\r\n}","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState, useEffect} from \"react\";\r\nimport {InputText} from \"../InputText/InputText\";\r\nimport {SvgPen} from \"./SvgPen\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    value: string\r\n    onChangeText: (value: string) => void\r\n    editMode: boolean\r\n    deactivateEditMode: () => void\r\n    activateEditMode: () => void\r\n    error?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (props) => {\r\n\r\n    const {\r\n        value,\r\n        onChangeText,\r\n        editMode,\r\n        deactivateEditMode,\r\n        activateEditMode,\r\n        error,\r\n        autoFocus, // Ignore autoFocus\r\n        onBlur,\r\n        spanProps,\r\n\r\n        ...restProps\r\n    } = props\r\n\r\n\r\n    const {children, className, ...restSpanProps} = spanProps || {};\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <EditModeInput\r\n                        autoFocus // autoFocus is always true\r\n                        onChangeText={onChangeText}\r\n                        onBlur={deactivateEditMode}\r\n                        onEnter={deactivateEditMode}\r\n                        error={error}\r\n                        value={value}\r\n\r\n                        {...restProps} // The rest of the props include value\r\n                    />\r\n                ) : (\r\n                    <EditMOdeOff>\r\n                        <StyledSpan\r\n                            onDoubleClick={activateEditMode}\r\n                            {...restSpanProps}\r\n                        >{value}\r\n                        </StyledSpan>\r\n                        <StyledSvgPen onClick={activateEditMode} className={'StyledSvgPen'}/>\r\n                    </EditMOdeOff>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst EditModeInput = styled(InputText)<StyledComponentProps<any, any, any, any>>`\r\n  //margin: 0;\r\n  padding: 0;\r\n  \r\n  height: 20px;\r\n\r\n  border: none;\r\n  border-radius: 0;\r\n\r\n  border-bottom: 1px solid ${({theme}) => theme.color.grey[\"400\"]};\r\n  \r\n  box-shadow: none;\r\n  outline: none;\r\n\r\n  line-height: 0;\r\n`\r\n\r\nconst EditMOdeOff = styled.div<StyledComponentProps<any, any, any, any>>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  margin-bottom: 20px;\r\n  \r\n  width: 100%;\r\n  height: 20px;\r\n`\r\n\r\nconst StyledSpan = styled.span<StyledComponentProps<any, any, any, any>>`\r\n  padding-right: 10px;\r\n  \r\n  &:hover ~ .StyledSvgPen {\r\n    fill: ${({theme}) => theme.color.grey[\"500\"]};\r\n  }\r\n`\r\n\r\nconst StyledSvgPen = styled(SvgPen)<StyledComponentProps<any, any, any, any>>`\r\n  fill: transparent;\r\n  &:hover {\r\n    fill: ${({theme}) => theme.color.primary.main};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default SuperEditableSpan;\r\n","import * as React from \"react\";\n\nexport function SvgPen(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      height=\"15px\"\n      viewBox=\"0 0 325 325.375\"\n      width=\"15px\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M114.688 284.676l-73.801-73.801 178.5-178.5 73.8 73.8zm-80.7-60.801l67.7 67.7-101.5 33.8zm281.899-140.3l-12.801 12.8-73.899-73.898 12.801-12.801c12.895-12.903 33.805-12.903 46.7 0l27.199 27.199c12.8 12.937 12.8 33.766 0 46.7zm0 0\" />\n    </svg>\n  );\n}\n","import React, {useState} from \"react\";\r\nimport EditableSpan from \"./EditableSpan\";\r\n\r\nexport const EditableSpanDemo = () => {\r\n\r\n    const [text, setText] = useState('Random text')\r\n    const [error, setError] = useState('')\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    const changeText = (newText: string) => {\r\n        setText(newText)\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        if (text === '') {\r\n            setError('The value must not be empty')\r\n        } else {\r\n            setError('')\r\n            setEditMode(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <EditableSpan onChangeText={changeText} deactivateEditMode={deactivateEditMode}\r\n                      activateEditMode={activateEditMode} value={text} editMode={editMode} error={error}/>\r\n    )\r\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype PropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nexport const RadioButtons: React.FC<PropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <RadioContainer key={name + \"-\" + i}>\r\n            <span>{o}</span>\r\n            <input\r\n                name={name}\r\n                type={\"radio\"}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n                checked={value === o}\r\n                {...restProps}\r\n            />\r\n            <Checkmark className={'checkmark'}/>\r\n        </RadioContainer>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nconst RadioContainer = styled.label`\r\n  \r\n  // The container\r\n  position: relative;\r\n  \r\n  display: block;\r\n  \r\n  padding-left: 25px;\r\n  padding-right: 15px;\r\n  margin-bottom: 12px;\r\n  \r\n  cursor: pointer;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n\r\n  // Hide the browser's default radio button\r\n  & input {\r\n    position: absolute;\r\n    \r\n    opacity: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  // On mouse-over, add a background color\r\n  &:hover input ~ .checkmark {\r\n    background-color: ${({theme}) => theme.color.grey[\"400\"]};\r\n  }\r\n\r\n  // When the radio button is checked, add a blue background\r\n  & input:checked ~ .checkmark {\r\n    background-color: ${({theme}) => theme.color.primary.main};\r\n  }\r\n  \r\n  // Show the indicator (dot/circle) when checked\r\n  & input:checked ~ .checkmark:after {\r\n    display: block;\r\n  }\r\n\r\n  // Style the indicator (dot/circle)\r\n  & .checkmark:after {\r\n    top: 5px;\r\n    left: 5px;\r\n    \r\n    width: 6px;\r\n    height: 6px;\r\n    \r\n    border-radius: 50%;\r\n    background: ${({theme}) => theme.color.white};\r\n  }\r\n`\r\n\r\nconst Checkmark = styled.div`\r\n  // Create a custom radio button\r\n  position: absolute;\r\n  bottom: 2px;\r\n  left: 0;\r\n  \r\n  height: 16px;\r\n  width: 16px;\r\n  \r\n  background-color: ${({theme}) => theme.color.grey[\"400\"]};\r\n  border-radius: 50%;\r\n\r\n  // Create the indicator (the dot/circle - hidden when not checked)\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n`\r\n","import {RadioButtons} from \"./RadioButtons\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const RadioButtonsDemo = () => {\r\n\r\n    const arr = [\"One\", \"Two\", \"Three\"];\r\n    const [value, onChangeOption] = useState(arr[0]);\r\n\r\n    return (\r\n        <RadioButtons options={arr}\r\n                      value={value}\r\n                      onChangeOption={onChangeOption}/>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[] | undefined\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options, onChangeOption,\r\n        value,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const mappedOptions: any[] | undefined = options ? options.map(option => {\r\n        return (\r\n            <React.Fragment key={option}>\r\n                <StyledInput onChange={onChangeCallback}\r\n                             name=\"test\" type=\"radio\"\r\n                             id={option}\r\n                             value={option}\r\n                             checked={value === option}\r\n                             {...restProps}\r\n                />\r\n                <Option className={\"option\"} htmlFor={option}>{option}</Option>\r\n            </React.Fragment>\r\n        )\r\n    }) : undefined;\r\n\r\n    return (\r\n        <SelectWrapper tabIndex={1}>\r\n            {mappedOptions}\r\n        </SelectWrapper>\r\n    )\r\n}\r\n\r\n// Styles\r\nconst SelectWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  position: relative;\r\n\r\n  width: 250px;\r\n  height: 40px;\r\n  outline: none;\r\n\r\n  cursor: pointer;\r\n\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n\r\n    & .option {\r\n      position: relative;\r\n\r\n      pointer-events: all;\r\n    }\r\n  }\r\n`\r\n\r\nconst Option = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n\r\n  padding: 0 30px 0 10px;\r\n\r\n  min-height: 40px;\r\n\r\n  background: ${({theme}) => theme.color.grey[\"200\"]};\r\n  color: ${({theme}) => theme.color.black};\r\n  border: none;\r\n  border-top: ${({theme}) => theme.color.primary.light} solid 1px;\r\n\r\n  pointer-events: none;\r\n  order: 2;\r\n  transition: background .4s ease-in-out;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({theme}) => theme.color.white};\r\n    background: ${({theme}) => theme.color.primary.main};\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\r\n  position: absolute;\r\n  left: -99999px;\r\n\r\n  opacity: 0;\r\n\r\n  // Active value\r\n  &:checked + label {\r\n    order: 1;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    background: ${({theme}) => theme.color.grey[\"200\"]};\r\n    border-top: none;\r\n\r\n    &:hover {\r\n      color: ${({theme}) => theme.color.white};\r\n      background: ${({theme}) => theme.color.primary.main};\r\n    }\r\n  }\r\n\r\n  // Arrow\r\n  &:checked + label:after {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    right: 15px;\r\n    top: calc(50% - 2.5px);\r\n    z-index: 3;\r\n\r\n    width: 0;\r\n    height: 0;\r\n\r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 5px solid white;\r\n    pointer-events: none;\r\n  }\r\n\r\n  // Square containing the arrow\r\n  &:checked + label:before {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    right: 0;\r\n\r\n    height: 40px;\r\n    width: 40px;\r\n\r\n    background: ${({theme}) => theme.color.primary.main};\r\n  }\r\n`","import {Select} from \"./Select\";\r\nimport React, {useState} from \"react\";\r\n\r\nexport const SelectDemo = () => {\r\n\r\n    const arr = [\"One\", \"Two\", \"Three\"];\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <Select options={arr} value={value} onChangeOption={onChangeOption}/>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport styled from \"styled-components/macro\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: any\r\n    values?: any\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nexport const RangeSlider: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, values,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <StyledSlider\r\n            defaultValue={values}\r\n            onChange={onChangeRange}\r\n            renderTrack={Track}\r\n            renderThumb={Thumb}\r\n        />\r\n    );\r\n}\r\n\r\nconst Track = (props: any, state: any) => <StyledTrack {...props} index={state.index}/>\r\nconst Thumb = (props: any, state: any) => <StyledThumb {...props}>{state.valueNow}</StyledThumb>;\r\n\r\n// Styles\r\n\r\nconst StyledSlider = styled(ReactSlider)`\r\n  width: 100%;\r\n  height: 2px;\r\n`\r\n\r\nconst StyledTrack = styled.div`\r\n  border-radius: 2px;\r\n  background: ${({theme}) => theme.color.primary.light};\r\n  height: 2px;\r\n`\r\n\r\nconst StyledThumb = styled.div`\r\n  outline: none;\r\n  height: 15px;\r\n  width: 15px;\r\n  background-color: ${({theme}) => theme.color.primary.main};\r\n  margin-top: -6.5px;\r\n  border-radius: 50%;\r\n  cursor: grab;\r\n  color: transparent;\r\n`;\r\n\r\n","import {RangeSlider} from \"./RangeSlider\";\r\nimport React, {useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const RangeSliderDemo = () => {\r\n    const [values, setValues] = useState([0, 100]);\r\n    const changeRangeInputValues = (values: Array<number>) => {\r\n        setValues(values)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledDiv1>Value: {values[0]}</StyledDiv1>\r\n            <StyledDiv2>Value: {values[1]}</StyledDiv2>\r\n\r\n                <RangeSlider values={values} onChangeRange={changeRangeInputValues}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n// Styles\r\n\r\nconst StyledDiv1 = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 30px;\r\n`\r\n\r\nconst StyledDiv2 = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n`","import React, {useState} from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    changePage: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\n\r\nexport const Pagination: React.FC<PropsType> = (props) => {\r\n\r\n    const {\r\n        pageSize, // Number of items displayed on the page.\r\n        totalItemsCount, // Total number of items.\r\n        currentPage, // The current page displayed.\r\n        changePage, // Callback function that sets the current page when clicking on the page number.\r\n        portionSize // Number of pages displayed on the pagination.\r\n    } = props\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const disablePrevButton = () => {\r\n        return portionNumber === 1\r\n    }\r\n\r\n    const disableNextButton = () => {\r\n        return portionNumber === portionCount\r\n    }\r\n\r\n    return (\r\n        <PaginatorContainer>\r\n            <Button onClick={() => {setPortionNumber(portionNumber - 1)}} disabled={disablePrevButton()}>PREV</Button>\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <PageNumberButton key={p}\r\n                                                currentPage={currentPage}\r\n                                                pageNumber={p}\r\n                                                onClick={() => {changePage(p)}}>{p}</PageNumberButton>)}\r\n            <Button onClick={() => {setPortionNumber(portionNumber + 1)}} disabled={disableNextButton()}>NEXT</Button>\r\n        </PaginatorContainer>\r\n    )\r\n}\r\n\r\nconst PaginatorContainer = styled.div`\r\n  display: flex;\r\n  \r\n  align-items: center;\r\n  \r\n  & button:not(:first-child) {\r\n    margin-left: .5rem;\r\n  }\r\n`\r\n\r\nconst PageNumberButton = styled(Button)<StyledComponentProps<any, any, any, any>>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  width: 3rem;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  background-color: ${({theme, currentPage, pageNumber}) => currentPage === pageNumber ? theme.color.primary.main : theme.color.grey['100']};\r\n  color: ${({theme, currentPage, pageNumber}) => currentPage === pageNumber ? theme.color.white : theme.color.black};\r\n  \r\n  &:hover {\r\n    background-color: ${({theme, currentPage, pageNumber}) => currentPage === pageNumber ? theme.color.primary.dark : theme.color.grey['200']};\r\n  }\r\n`","import React, { useState } from \"react\";\r\nimport { Pagination } from \"./Pagination\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const PaginationDemo = () => {\r\n\r\n    const [page, setPage] = useState<number>(1)\r\n\r\n    const changePage = (pageNumber: number) => {\r\n        setPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageDisplay>Current page: {page}</PageDisplay>\r\n            <Pagination pageSize={4} portionSize={10} currentPage={page} changePage={changePage} totalItemsCount={500}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst PageDisplay = styled.div`\r\n  position: absolute;\r\n  top: 60px;\r\n`","import styled from \"styled-components/macro\";\r\nimport { useState } from \"react\";\r\nimport { InputText } from \"../InputText/InputText\";\r\n\r\nexport const FilterDemo = () => {\r\n\r\n    const arrayToFilter = [\r\n        {\r\n            id: 1,\r\n            name: \"Maria\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Marta\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Margo\"\r\n        }\r\n    ];\r\n\r\n    const [filterValue, setFilterValue] = useState<string>(\"\");\r\n\r\n    const filterValueChangeHandler = (value: string) => {\r\n        setFilterValue(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <InputText placeholder={\"Name\"} value={filterValue} onChangeText={filterValueChangeHandler} />\r\n\r\n            <Wrapper >\r\n                <div>filter value: {filterValue}</div>\r\n                {arrayToFilter.map(item => (item.name.includes(filterValue) && <div key={item.id}>{item.name}</div>))}\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\n// Styles\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n`;\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {StyledComponentProps} from \"styled-components\";\r\n\r\ntype DefaultInputT = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\nexport const InputFile: React.FC<DefaultInputT> = (props) => {\r\n\r\n    const {\r\n        type\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <StyledInput type='file' id='input-file-btn' {...props} hidden/>\r\n            <StyledLabel htmlFor='input-file-btn'>Upload your avatar</StyledLabel>\r\n        </>\r\n    )\r\n}\r\n\r\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\r\n  height: 20px;\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.color.primary.main};\r\n  color: ${({theme}) => theme.color.white};\r\n  padding: 0.5rem 1rem;\r\n\r\n  box-shadow: ${({theme}) => theme.shadow['1']};\r\n\r\n  font-family: ${({theme}) => theme.font.family.default}; \r\n  font-size: ${({theme}) => theme.font.size.default};\r\n\r\n  transition: all .1s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: ${({theme}) => theme.color.primary.dark};\r\n    transform: translateY(-0.1em);\r\n    box-shadow: ${({theme}) => theme.shadow['4']};\r\n  }\r\n\r\n  &:active {\r\n    background-color: ${({theme}) => theme.color.primary.light};\r\n    transform: translateY(0);\r\n    box-shadow: ${({theme}) => theme.shadow['1']};\r\n  }\r\n`\r\n","import styled, {StyledComponentProps} from \"styled-components\";\r\n\r\nconst handleSize = (size: 'small' | 'big' | null) => {\r\n  switch (size) {\r\n    case 'small': return '4rem'\r\n    case 'big': return '14rem'\r\n    default: return '8rem'\r\n  }\r\n}\r\n\r\nexport const Avatar = styled.img<StyledComponentProps<any, any, any, any>>`\r\n  width: ${({size}) => handleSize(size)};\r\n  height: ${({size}) => handleSize(size)};\r\n  border-radius: 100%;\r\n  border: .2rem solid ${({theme}) => theme.color.primary.main};\r\n`","import React from 'react';\nimport {Button} from \"./components/Button/Button\";\nimport {Card} from './components/layout/Card';\nimport {Container} from \"./components/layout/Container\";\nimport styled from \"styled-components/macro\";\nimport {ImageSliderDemo} from './components/ImageSlider/ImageSliderDemo';\nimport {CheckboxDemo} from \"./components/Checkbox/checkboxDemo\";\nimport {InputTextDemo} from \"./components/InputText/InputTextDemo\";\nimport {EditableSpanDemo} from \"./components/EditableSpan/EditableSpanDemo\";\nimport {RadioButtonsDemo} from './components/RadioButtons/RadioButtonsDemo';\nimport {SelectDemo} from './components/Select/SelectDemo';\nimport {RangeSliderDemo} from \"./components/RangeSlider/RangeSliderDemo\";\nimport {PaginationDemo} from \"./components/Pagination/PaginationDemo\";\nimport {FilterDemo} from \"./components/Filter/FilterDemo\";\nimport {InputFile} from \"./components/InputFile/InputFile\";\nimport {Avatar} from \"./components/Avatar/Avatar\";\n\nfunction App() {\n\n    return (\n        <StyledContainer>\n            <CardsWrapper>\n\n                <StyledCard>\n                    <Button>Button</Button>\n                </StyledCard>\n\n                <StyledCard>\n                    <CheckboxDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <InputTextDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <EditableSpanDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <RadioButtonsDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <SelectDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <RangeSliderDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <ImageSliderDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <FilterDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <PaginationDemo/>\n                </StyledCard>\n\n                <StyledCard>\n                    <Avatar src='https://png.pngtree.com/element_our/20190530/ourlarge/pngtree-520-couple-avatar-boy-avatar-little-dinosaur-cartoon-cute-image_1263411.jpg'/>\n                </StyledCard>\n\n                <StyledCard>\n                    <InputFile/>\n                </StyledCard>\n\n            </CardsWrapper>\n        </StyledContainer>\n    )\n}\n\nexport default App;\n\nconst StyledContainer = styled(Container)`\n  margin-left: -30px;\n`\n\nconst CardsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`\n\nconst StyledCard = styled(Card)`\n  margin: 0 0 30px 30px;\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {darken, lighten} from \"polished\";\r\n\r\nexport type ThemeType = typeof theme;\r\n\r\nconst primaryColor = '#2193c8'\r\nconst secondaryColor = '#be1974'\r\nconst ternaryColor = '#6bbe19'\r\n\r\nexport const theme = {\r\n    color: {\r\n        primary: {\r\n            main: primaryColor,\r\n            light: `${lighten(0.1, primaryColor)}`,\r\n            dark: `${darken(0.1, primaryColor)}`\r\n        },\r\n        secondary: {\r\n            main: secondaryColor,\r\n            light: `${lighten(0.1, secondaryColor)}`,\r\n            dark: `${darken(0.1, secondaryColor)}`\r\n        },\r\n        ternary: {\r\n            main: ternaryColor,\r\n            light: `${lighten(0.1, ternaryColor)}`,\r\n            dark: `${darken(0.1, ternaryColor)}`\r\n        },\r\n        grey: {\r\n            100: '#f5f5f5',\r\n            200: '#eeeeee',\r\n            300: '#e0e0e0',\r\n            400: '#bdbdbd',\r\n            500: '#9e9e9e',\r\n            600: '#757575',\r\n            700: '#616161',\r\n            800: '#424242',\r\n            900: '#212121',\r\n        },\r\n        black: '#000',\r\n        white: '#fff',\r\n        error: '#cf1313',\r\n    },\r\n    font: {\r\n        source: `https://fonts.googleapis.com/css2?family=Montserrat:wght@600&family=Roboto&display=swap`,\r\n        family: {\r\n            default: `'Roboto', sans-serif;`,\r\n            montserrat: `'Montserrat', sans-serif;`\r\n        },\r\n        size: {\r\n            s3: '0.512rem', // 8.19px\r\n            s2: '0.64rem', // 10.24px\r\n            s1: '0.8rem', // 12.80px\r\n            default: '16px', // https://type-scale.com/ - Major third\r\n            b1: '1.25rem', // 20.00px\r\n            b2: '1.563rem', // 25.00px\r\n            b3: '1.953rem', // 31.25px\r\n            b4: '2.441rem', // 39.06px\r\n            b5: '3.052rem' // 48.83px\r\n        }\r\n    },\r\n    shadow: {\r\n        0: 'none',\r\n        1: '2px 2px 5px rgba(0,0,0,0.2)',\r\n        2: \"2px 2px 6px rgba(0,0,0,0.2)\",\r\n        3: \"2px 2px 7px rgba(0,0,0,0.2)\",\r\n    },\r\n    mediaQuery: {\r\n        mobileS: '320px',\r\n        mobileM: '375px',\r\n        mobileL: '425px',\r\n        tablet: '768px',\r\n        laptop: '1024px',\r\n        laptopL: '1440px',\r\n        fourK: '2560px',\r\n    }\r\n};","import { createGlobalStyle } from \"styled-components/macro\";\r\nimport { ThemeType } from \"./theme\";\r\n\r\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\r\n  // Import the font link into the project\r\n  @import url('${({ theme }) => theme.font.source}');\r\n\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  *:focus {\r\n    outline: none;\r\n  }\r\n\r\n  *::selection {\r\n  }\r\n\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  h1 {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n    font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n    font-weight: 500;\r\n    color: #000;\r\n  }\r\n\r\n  ul,\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    display: block;\r\n  }\r\n\r\n  button,\r\n  input {\r\n    outline: none;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n  }\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from \"styled-components/macro\";\nimport {theme} from './styles/theme';\nimport { GlobalStyles } from './styles/GlobalStyles';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <App/>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}